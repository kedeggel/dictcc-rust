# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

environment:
  global:
    RUST_VERSION: stable

    CRATE_NAME: dictcc

  matrix:
    # MinGW

    # linking with `gcc` failed: exit code: 1
#    - TARGET: i686-pc-windows-gnu

    - TARGET: x86_64-pc-windows-gnu

    # MSVC

    # linking with `link.exe` failed: exit code: 1120
#    - TARGET: i686-pc-windows-msvc

    - TARGET: x86_64-pc-windows-msvc

    # Testing other channels
#    - TARGET: x86_64-pc-windows-gnu
#      RUST_VERSION: nightly
#    - TARGET: x86_64-pc-windows-msvc
#      RUST_VERSION: nightly

install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V

# TODO This is the "test phase", tweak it as you see fit
test_script:
  # we don't run the "test phase" when doing deploys
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo build --features cli --target %TARGET% &&
      cargo build --features cli --target %TARGET% --release &&
      cargo test --features cli --target %TARGET% &&
      cargo test --features cli --target %TARGET% --release &&
      cargo run --features cli --target %TARGET% -- -d tests/database/test_database.txt --no-config --no-pager -t r "*" &&
      cargo run --features cli --target %TARGET% --release -- -d tests/database/test_database.txt --no-config --no-pager -t r "*"
    )

before_deploy:
  # TODO Update this to build the artifacts that matter to you
  - cargo rustc --target %TARGET% --release --features cli --bin dictcc -- -C lto
  - ps: ci\before_deploy.ps1

deploy:
  artifact: /.*\.zip/
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it. Go to https://ci.appveyor.com/tools/encrypt
  # - Paste the output down here
  auth_token:
    secure: ejvODQZvKIdUy/zvCX+VuUQGyQ+KmS1jIlrp0dCEu0XHFDDHCTxa+8bf47FJ8O8k
  description: ''
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    RUST_VERSION: stable
    appveyor_repo_tag: true
  provider: GitHub

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

branches:
  only:
    # Release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  - provider: Email
    on_build_success: false

# Building is done in the test phase, so we disable Appveyor's build phase.
build: false
